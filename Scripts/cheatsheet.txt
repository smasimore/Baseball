# RESTART MYSQL
# we were getting 'MySQL server has gone away' errors when trying to have two sql instances
# open at the same time (including 2 scripts at once or two users)
#
# ERROR 2013 (HY000): Lost connection to MySQL server at 'sending authentication information', system error: 32
#
# authentication information', system error: 32
# 'stop' and 'stop' will also work at the end
sudo /Library/StartupItems/MySQLCOM/MySQLCOM restart

# ADD MYSQL TABLE
mysql -u root -p baseball < create_table.sql

# COPY FILE FROM OFF DEVSERVER
scp testimport2.csv baseball@24.5.82.91:~/Desktop/Baseball

# BACKUP BASEBALL ONTO LOCAL
scp -r baseball@24.5.82.91:/Users/baseball/Desktop/Baseball/ ~/Desktop/

# IMPORT CSV
# Note: use .tsv (.txt on a Mac) for JSONS (displayed below)
# Enter this while IN MySQL
load data local infile 'schedules_scores_2013.txt' into table schedule_scores_2013 fields terminated by '\t' lines terminated by '\r';

# CRONTAB -E WON'T SAVE
# Run this command in cl and try again
export EDITOR=vim

# Check for non UTF-8 Chars
~/Phabricator/libphutil/scripts/utils/utf8.php *

# Backfill Command
php backfill.php 2014-04-01 2014-05-27 Simulation sql_to_csv.php sim_nomagic_2014 main.py csv_to_sql.php

# MySQL config
sudo vim /etc/my.cnf

# Unclog Phabricator Queue
# Can see backlog in http://phabricator.sabertoothventures.com/daemon/
~/Baseball/Phabricator/phabricator/bin/phd restart

# Install PCNTL
# 1) Install autoconf
https://gist.github.com/jellybeansoup/4192307
# 2) Re-download php to extract pcntl
http://serverfault.com/questions/158113/installing-pcntl-module-for-php-without-recompiling
# Note, instead of /etc/php.d/pcntl.ini part just add extension=pcntl.so to php.ini
# Start daemons with ./bin/phd start in /phabricator

# Restart mail server
sudo postfix start

# Tail mail error logs
tail f /var/log/mail.log

# Fix gmail email post
https://rtcamp.com/tutorials/linux/ubuntu-postfix-gmail-smtp/
# For New OS (Yosemite, etc) do following in /etc/postfix/main.cf
comment out smtp_tls_CAfile
add smtp_sasl_mechanism_filter = plain

# Monitor processes (not exactly sure what these do... but useful
# to kill a process, e.g. daily.php)
ps ef 
ps aux # I think this is what's currently running

# kill a process (get pid from above ps commands)
kill <pid>

# MySQL super fucked up and won't restart?
ps aux | grep mysql
# kill the processes for mysql
sudo kill -9 <pid>
# start mysql - this command is better than one at top because it shows
# you an error message
sudo /usr/local/mysql/support-files/mysql.server start
# No PIDs for mysql running and still getting error?
sudo mv /etc/my.cnf /etc/my.cnf.backup
sudo /usr/local/mysql/support-files/mysql.server restart
sudo mv /etc/my.cnf.backup /etc/my.cnf

# MySQL info
SHOW VARIABLES;
SHOW STATUS;
SHOW PROCESSLIST;

# MySQL server gone away fix attempts
launchctl limit # shows maxfiles limit (osx default is 256, possibly causing issue)
launchctl limit maxfiles 2048 2048 # changes limit (possibly just in session.. cleared when restarted?)

# Socket errors
/var/mysql/mysql.sock is symbolically synced to /tmp/mysql.sock

##### Apache #####
# config
/etc/apache2/httpd.conf
# virtual hosts
/private/etc/apache2/extra/httpd-vhosts.conf
# error log
/var/log/apache2/error_log
# restart
sudo apachectl -k restart

##### GIT #####
# mass stage removed files
git rm $(git ls-files --deleted)  

# Add file to .gitignore that is already tracked in the system
# In .gitignore (localted in base dir) add the file type and run command below:
for file in `cat .gitignore`  ; do git rm -r --cached $file; done

# Profile processing cost for Python
python -m cProfile test.py

# Merge conflict in binary
git checkout --ours -- <path to file>
git add .
git commit -m "resolve"
arc land

# ps aux but cooler
top

# clear out inactive ram (cached)
purge

# Get mysql table sizes in mb
SELECT TABLE_NAME, table_rows, data_length, index_length,  round(((data_length + index_length) / 1024 / 1024),2) "Size in MB" FROM information_schema.TABLES ORDER BY (data_length + index_length) DESC;

# MySQL won't start
/usr/local/mysql/data/Sarah-Masimore.local.err # useful error log
ls -laF /usr/local/mysql/ # show permissions
sudo chown -R mysql /usr/local/mysql/ # sets permissions

# Add remote access to MySQL to a new comp for running sim
# In MySQL:
GRANT ALL ON fooDatabase.* TO fooUser@'1.2.3.4' IDENTIFIED BY 'my_password';
# On local:
1. Install MySQLdb package for python
http://stackoverflow.com/questions/1448429/how-to-install-mysqldb-python-data-access-library-to-mysql-on-mac-os-x#1448476
2. Create constants.py file

# 'Keychain not found' dialog
This is related to how Phabricator uses diffusion and daemons. Basically the
daemons update the /var/repo/B thing so that Phabricator knows when the git
repo has been updated. This error means the git keychain isn't there. Add it,
dialog still shows up, then hit reset to defaults in dialog and magically it
goes away. 
